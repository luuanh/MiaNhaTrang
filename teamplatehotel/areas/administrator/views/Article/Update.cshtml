@model TeamplateHotel.Areas.Administrator.EntityModel.EArticle
@using TeamplateHotel.Controllers
@using ProjectLibrary.Database
@using  ProjectLibrary.Config
@{
    Layout = "~/Areas/Administrator/Views/Templates/_LayoutPage.cshtml";
    int flag = 0;
    List<Menu> listMenu = CommentController.GetMenuByType(SystemMenuType.Fress, Request.Cookies["LanguageID"].Value);
    int j = 0;
}
}
<div class="span12">
    <div class="widget ">
        <div class="widget-header">
            <i class=" icon-plus-sign"></i>
            <h3>@ViewBag.Title</h3>
        </div> <!-- /widget-header -->

        <div class="widget-content">
            @Html.ValidationSummary(true)
            @using (Html.BeginForm("Update", "Article", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.HiddenFor(a => a.ID)
                <div class="control-group" id="listHotel">
                    <label class="control-label" for="MenuID">Chuyên mục bài viết<span class="asterisk">*</span></label>
                    <div class="controls">
                        @Html.DropDownListFor(p => p.MenuID, new SelectList(ViewBag.ListMenu, "Value", "Text"), new { @class = "span3", @onchange = "ChaneMenuID()" })
                        @Html.ValidationMessageFor(p => p.MenuID)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="Title">Tiêu đề bài viết<span class="asterisk">*</span></label>
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Title, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Title)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Alias, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Alias, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Alias)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Image, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Image, new { @class = "span4 inputbox upload" })
                        @Html.ValidationMessageFor(c => c.Image)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(c => c.Link, new { @class = "control-label", @id = "labelLink" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Link, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Link)
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Title">Trạng thái hiển thị</label>
                    <div class="controls">
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Status, "true")  Có</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Status, "false") Không</label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Title">Bài viết giới thiệu</label>
                    <div class="controls">
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Home, "true")  Có</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Home, "false") Không</label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Title">Bài viết top</label>
                    <div class="controls">
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Top, "true")  Có</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Top, "false") Không</label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="Title">Bài viết hot</label>
                    <div class="controls">
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Hot, "true")  Có</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.Hot, "false") Không</label>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="Title">Bài viết nổi bật</label>
                    <div class="controls">
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.New, "true")  Có</label>
                        <label class="radio-inline">@Html.RadioButtonFor(m => m.New, "false")Không</label>
                    </div>
                </div>
                <div class="control-group" style="margin-top: 40px">
                    @Html.LabelFor(c => c.Description, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(c => c.Description, new { @class = "basic-ckeditor" })
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="Content">Mô tả chi tiết<span class="asterisk">*</span></label>
                    <div class="controls">
                        <p>
                            <span class="error-login">@Html.ValidationMessageFor(a => a.Content)</span>
                        </p>

                        @Html.TextAreaFor(c => c.Content, new { @class = "full-ckeditor" })
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <h3 class="mg-h">Thêm hình ảnh cho bài viết</h3>
                        <ul class="adminformlist">
                            <li class="imgthumb">
                                <label>Hình ảnh </label>
                                <input type="text" id="img-thumb" style="min-width: 190px" class="upload" />
                                <button type="button" id="add" class="btn btn-primary">Insert</button>
                                @* <p class="help-img">Nên chọn hình ảnh có kích thước lớn hơn 600px</p>*@
                            </li>
                            <li>
                                <ul style="clear: both; height: auto; width: 100%;" class="allImage" id="">
                                    @if (Model.EGalleryArticles != null)
                                    {
                                        foreach (var gallery in Model.EGalleryArticles)
                                        {
                                            <li>
                                                <input id="EGalleryITems_@(flag)__Image" name="EGalleryArticles[@(flag)].Image" type="hidden" value="@(gallery.Image)" />
                                                <img src="@(gallery.Image)" width="100" />
                                            </li>
                                            flag++;
                                        }
                                    }


                                </ul>
                            </li>

                        </ul>
                    </div>
                </div>
                <div class="form-actions">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <a href="@Url.Action("Index", "Article")" class="btn">Cancel</a>
                </div>

                <div class="control-seo">
                    <h3 class="mg-h">Tối ưu hoá công cụ tìm kiếm(Seo)</h3>
                    <div class="control-group">
                        @Html.LabelFor(c => c.MetaTitle)
                        @Html.TextBoxFor(c => c.MetaTitle, new { @class = "span4" })
                        @Html.ValidationMessageFor(p => p.MetaTitle)
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(c => c.MetaDescription)
                        <div class="jtable-input jtable-text-input">
                            @Html.TextAreaFor(c => c.MetaDescription, new { @class = "span4 meta-seo" })
                            @Html.ValidationMessageFor(p => p.MetaDescription)
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<ul id='context-menu'>
    <li>Delete</li>
</ul>

<script type="text/javascript">
    var count = 0;
    function bindRightClick() {
        $('.allImage li').unbind();
        $('.allImage li').bind('contextmenu', function (e) {
            $('#context-menu').css('left', e.pageX + 'px');
            $('#context-menu').css('top', e.pageY + 'px');
            $('#context-menu').show();
            e.preventDefault();
            curentImg = $(this);
            return false;
        });
    }
    function bindRightClick() {
        $('.allImage li').unbind();
        $('.allImage li').bind('contextmenu', function (e) {
            $('#context-menu').css('left', e.pageX + 'px');
            $('#context-menu').css('top', e.pageY + 'px');
            $('#context-menu').show();
            e.preventDefault();
            curentImg = $(this);
            return false;
        });
    }
    function loadHtmlForImage(val) {
        if ($('#EGalleryITems_' + val + '__Image').length > 0) {
            return loadHtmlForImage(++val);
        } else {
            //console.log(val);
            var image = '<input id="EGalleryITems_' + val + '__Image" name="EGalleryArticles[' + val + '].Image" type="hidden" value="' + $('#img-thumb').val() + '"/>';
            var img = '<img src="' + $('#img-thumb').val() + '" width="100" height="80" />';
            return ('<li>' + image + img + '</li>');
        }
    }

    $('html').click(function (e) {
        $('#context-menu').hide();
    });
    $('#context-menu').click(function (e) {
        e.stopPropagation();
        $(curentImg).remove();
        sapxep();
        $('#context-menu').hide(100);
    });
    $(window).resize(function () {
        $('#context-menu').hide();
    });
    //Thêm ảnh

    $('#add').click(function () {
        if ($('#img').val() == "") {
            alert("Xin vui lòng chọn ảnh");
        } else {
            var data = '';
            while (true) {
                if ($('#EGalleryITems_0__Image').length == 0) {
                    data = loadHtmlForImage(0);
                    count = 1;
                } else {
                    data = loadHtmlForImage(count++);
                }
                break;
            }
            $('.allImage').append(data);
            //sapxep();
            bindRightClick();
            $('#img-title').val('');
            $('#img-thumb').val('');
            $('#img').val('');
        }

    });
    $(document).ready(function () {
        bindUl();
        AutoAlias("Title", "Alias");
        CreateCkEditor();
        bindRightClick();

        //
        ChaneMenuID();



    });
    function ChaneMenuID() {
        var menuID = $("#MenuID").val();

        for (var i = 0;i< @listMenu.Count;i++)
        {
            j = i;
            console.log(menuID + @listMenu[j].ID);
            if (menuID != @listMenu[j].ID)
            {
                $("#Link").css("display", "none");
                $("#labelLink").css("display", "none");
            }
            else
            {
                $("#Link").css("display", "block");
                $("#labelLink").css("display", "block");
            }
        }

    }
</script>
